module fsm (clk,x,y,state);
	output reg [3:0]state;
	output reg y;
	input clk,x;
	initial 
	begin
	state=4'd0;
	end
	always@(posedge clk)
		case(state)
		4'd0:
		begin 
		if(x)
		begin
		state<=4'd5;
			y<=0;
		end
		else
		begin
		state<=4'd1;
			y<=0;
		
		end
		end
		
			4'd1:
		begin 
		if(x)
		begin
		state<=4'd5;
			y<=0;
		end
		else
		begin
		state<=4'd2;
			y<=0;
		
		end
		end
	
			4'd2:
		begin 
		if(x)
		begin
		state<=4'd5;
			y<=0;
		end
		else
		begin
		state<=4'd3;
			y<=0;
		
		end
		end
		
		
			4'd3:
		begin 
		if(x)
		begin
		state<=4'd5;
			y<=0;
		end
		else
		begin
		state<=4'd4;
			y<=0;
		
		end
		end
		
		
			4'd4:
		begin 
		if(x)
		begin
		state<=4'd5;
			y<=0;
		end
		else
		begin
		state<=4'd4;
			y<=1;
		
		end
		end
		
		
		
			4'd5:
		begin 
		if(x)
		begin
		state<=4'd6;
			y<=0;
		end
		else
		begin
		state<=4'd1;
			y<=0;
		
		end
		end
		
		
		
			4'd6:
		begin 
		if(x)
		begin
		state<=4'd7;
			y<=0;
		end
		else
		begin
		state<=4'd1;
			y<=0;
		
		end
		end
		
		
		
			4'd7:
		begin 
		if(x)
		begin
		state<=4'd8;
			y<=0;
		end
		else
		begin
		state<=4'd1;
			y<=0;
		
		end
		end
		
		
			4'd8:
		begin 
		if(x)
		begin
		state<=4'd8;
			y<=1;
		end
		else
		begin
		state<=4'd1;
			y<=0;
		
		end
		end
		endcase
endmodule
